/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package ghost;

import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;
import processing.core.PApplet;
import processing.core.PImage;
import processing.core.PApplet;
import processing.core.PImage;
import java.awt.*;
import java.awt.event.*;
import java.util.*;
import java.io.*;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.util.Iterator;
import org.json.simple.JSONArray;
import org.json.simple.JSONObject;
import org.json.simple.parser.JSONParser;
import org.json.simple.parser.ParseException;
import java.io.FileWriter;
import java.lang.Object;
class AppTest {
    @Test 
    public void simpleTest() {

        //manager test, this is to test the game build
        //first test read map, it should return an arraylist<String>
        Manager mm = new Manager();
        App app = new App();
        PImage a = new PImage();
        Chaser chaser=new Chaser(16*mm.getcx(),16*mm.getcy(),mm.speedstime(),mm.speedstime(),a,a,a);
        Ignorant ignorant=new Ignorant(16*mm.getix(),16*mm.getiy(),mm.speedstime(),mm.speedstime(),a,a,a);
        Whim whim=new Whim(16*mm.getwx(),16*mm.getwy(),mm.speedstime(),mm.speedstime(),a,a,a);

        Ambusher ambusher=new Ambusher(16*mm.getax(),16*mm.getay(),mm.speedstime(),mm.speedstime(),a,a,a);
        Player player=new Player(16*mm.getx(),16*mm.gety(),mm.speedstime(),mm.speedstime(),a,a,a,a,a,a,a,a,a,a,a,a,a,a,a);

        assertEquals("6",mm.readjson().get(3).substring(0,1));
        assertEquals(13,mm.getx());
        assertEquals(20,mm.gety());
        assertEquals(10,mm.getax());
        assertEquals(14,mm.getay());
        assertEquals(12,mm.getcx());
        assertEquals(14,mm.getcy());
        assertEquals(14,mm.getix());
        assertEquals(14,mm.getiy());
        assertEquals(16,mm.getwx());
        assertEquals(14,mm.getwy());

        assertEquals(16*mm.getax(),ambusher.getx());
        assertEquals(16*mm.getay(),ambusher.gety());
        assertTrue(ambusher.canselect(mm.readjson()));
        ambusher.tickxu();
        ambusher.tickxd();
        ambusher.tickyu();
        ambusher.tickyd();
        ambusher.setnimage();
        ambusher.setfimage();
        ambusher.reset();
        ambusher.setx(1);
        ambusher.sety(1);
        ambusher.select(mm.readjson());
        ambusher.move(player,mm.getscattertime().get(0),mm.getscattertime().get(1),1,mm.readjson(),37);
        ambusher.move(player,mm.getscattertime().get(0),mm.getscattertime().get(1),1500,mm.readjson(),37);
        ambusher.f(player,mm.readjson());

        assertEquals(16*mm.getcx(),chaser.getx());
        assertEquals(16*mm.getcy(),chaser.gety());
        assertTrue(chaser.canselect(mm.readjson()));
        chaser.tickxu();
        chaser.tickxd();
        chaser.tickyu();
        chaser.tickyd();
        chaser.setnimage();
        chaser.setfimage();
        chaser.reset();
        chaser.setx(1);
        chaser.sety(1);
        chaser.select(mm.readjson());
        chaser.move(player,mm.getscattertime().get(0),mm.getscattertime().get(1),1,mm.readjson());
        chaser.move(player,mm.getscattertime().get(0),mm.getscattertime().get(1),1500,mm.readjson());
        chaser.f(player,mm.readjson());

        assertEquals(16*mm.getix(),ignorant.getx());
        assertEquals(16*mm.getiy(),ignorant.gety());
        assertTrue(ignorant.canselect(mm.readjson()));
        ignorant.tickxu();
        ignorant.tickxd();
        ignorant.tickyu();
        ignorant.tickyd();
        ignorant.setnimage();
        ignorant.setfimage();
        ignorant.reset();
        ignorant.setx(1);
        ignorant.sety(1);
        ignorant.select(mm.readjson());
        ignorant.move(player,mm.getscattertime().get(0),mm.getscattertime().get(1),1,mm.readjson(),37);
        ignorant.move(player,mm.getscattertime().get(0),mm.getscattertime().get(1),1500,mm.readjson(),37);
        ignorant.f(player,mm.readjson());

        assertEquals(16*mm.getwx(),whim.getx());
        assertEquals(16*mm.getwy(),whim.gety());
        assertTrue(whim.canselect(mm.readjson()));
        whim.tickxu();
        whim.tickxd();
        whim.tickyu();
        whim.tickyd();
        whim.setnimage();
        whim.setfimage();
        whim.reset();
        whim.setx(1);
        whim.sety(1);
        whim.select(mm.readjson());
        whim.move(player,mm.getscattertime().get(0),mm.getscattertime().get(1),1,mm.readjson(),37,chaser);
        whim.move(player,mm.getscattertime().get(0),mm.getscattertime().get(1),1500,mm.readjson(),37,chaser);
        whim.f(player,mm.readjson());

        player.tickxu();
        player.tickxd();
        player.tickyu();
        player.tickyd();
        player.reset();
        player.setimage(a);
        assertEquals(16*13,player.getx());
        assertEquals(16*20,player.gety());
        player.direct(38,37,mm.readjson());
        player.move(37,mm.readjson());
        player.playerchange(37,37);
        player.playerchange(40,37);
    }

}
